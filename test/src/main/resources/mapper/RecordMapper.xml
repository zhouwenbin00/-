<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.test.lms.dao.RecordMapper">
  <resultMap id="BaseResultMap" type="cn.test.lms.bean.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_num" jdbcType="VARCHAR" property="bookNum" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="reader_name" jdbcType="VARCHAR" property="readerName" />
    <result column="borrow_date" jdbcType="DATE" property="borrowDate" />
    <result column="return_date" jdbcType="DATE" property="returnDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="rent" jdbcType="DOUBLE" property="rent" />
    <result column="borrows_days" jdbcType="INTEGER" property="borrowsDays" />
    <result column="over_days" jdbcType="INTEGER" property="overDays" />
    <result column="over_rent" jdbcType="DOUBLE" property="overRent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_num, book_name, reader_name, borrow_date, return_date, status, rent, borrows_days, 
    over_days, over_rent, user_id
  </sql>
  <select id="selectByExample" parameterType="cn.test.lms.bean.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.test.lms.bean.RecordExample">
    delete from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.test.lms.bean.Record">
    insert into tb_record (id, book_num, book_name, 
      reader_name, borrow_date, return_date, 
      status, rent, borrows_days, 
      over_days, over_rent, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{bookNum,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{readerName,jdbcType=VARCHAR}, #{borrowDate,jdbcType=DATE}, #{returnDate,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{rent,jdbcType=DOUBLE}, #{borrowsDays,jdbcType=INTEGER}, 
      #{overDays,jdbcType=INTEGER}, #{overRent,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.test.lms.bean.Record">
    insert into tb_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="readerName != null">
        reader_name,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="borrowsDays != null">
        borrows_days,
      </if>
      <if test="overDays != null">
        over_days,
      </if>
      <if test="overRent != null">
        over_rent,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="readerName != null">
        #{readerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=DOUBLE},
      </if>
      <if test="borrowsDays != null">
        #{borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="overDays != null">
        #{overDays,jdbcType=INTEGER},
      </if>
      <if test="overRent != null">
        #{overRent,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.test.lms.bean.RecordExample" resultType="java.lang.Long">
    select count(*) from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookNum != null">
        book_num = #{record.bookNum,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.readerName != null">
        reader_name = #{record.readerName,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowDate != null">
        borrow_date = #{record.borrowDate,jdbcType=DATE},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.rent != null">
        rent = #{record.rent,jdbcType=DOUBLE},
      </if>
      <if test="record.borrowsDays != null">
        borrows_days = #{record.borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="record.overDays != null">
        over_days = #{record.overDays,jdbcType=INTEGER},
      </if>
      <if test="record.overRent != null">
        over_rent = #{record.overRent,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_record
    set id = #{record.id,jdbcType=INTEGER},
      book_num = #{record.bookNum,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      reader_name = #{record.readerName,jdbcType=VARCHAR},
      borrow_date = #{record.borrowDate,jdbcType=DATE},
      return_date = #{record.returnDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      rent = #{record.rent,jdbcType=DOUBLE},
      borrows_days = #{record.borrowsDays,jdbcType=INTEGER},
      over_days = #{record.overDays,jdbcType=INTEGER},
      over_rent = #{record.overRent,jdbcType=DOUBLE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.test.lms.bean.Record">
    update tb_record
    <set>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="readerName != null">
        reader_name = #{readerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=DOUBLE},
      </if>
      <if test="borrowsDays != null">
        borrows_days = #{borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="overDays != null">
        over_days = #{overDays,jdbcType=INTEGER},
      </if>
      <if test="overRent != null">
        over_rent = #{overRent,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.test.lms.bean.Record">
    update tb_record
    set book_num = #{bookNum,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      reader_name = #{readerName,jdbcType=VARCHAR},
      borrow_date = #{borrowDate,jdbcType=DATE},
      return_date = #{returnDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=DOUBLE},
      borrows_days = #{borrowsDays,jdbcType=INTEGER},
      over_days = #{overDays,jdbcType=INTEGER},
      over_rent = #{overRent,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cn.test.lms.bean.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_num" jdbcType="VARCHAR" property="bookNum" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="reader_name" jdbcType="VARCHAR" property="readerName" />
    <result column="borrow_date" jdbcType="DATE" property="borrowDate" />
    <result column="return_date" jdbcType="DATE" property="returnDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="rent" jdbcType="DOUBLE" property="rent" />
    <result column="borrows_days" jdbcType="INTEGER" property="borrowsDays" />
    <result column="over_days" jdbcType="INTEGER" property="overDays" />
    <result column="over_rent" jdbcType="DOUBLE" property="overRent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_num, book_name, reader_name, borrow_date, return_date, status, rent, borrows_days, 
    over_days, over_rent, user_id
  </sql>
  <select id="selectByExample" parameterType="cn.test.lms.bean.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.test.lms.bean.RecordExample">
    delete from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.test.lms.bean.Record">
    insert into tb_record (id, book_num, book_name, 
      reader_name, borrow_date, return_date, 
      status, rent, borrows_days, 
      over_days, over_rent, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{bookNum,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{readerName,jdbcType=VARCHAR}, #{borrowDate,jdbcType=DATE}, #{returnDate,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{rent,jdbcType=DOUBLE}, #{borrowsDays,jdbcType=INTEGER}, 
      #{overDays,jdbcType=INTEGER}, #{overRent,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.test.lms.bean.Record">
    insert into tb_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="readerName != null">
        reader_name,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="borrowsDays != null">
        borrows_days,
      </if>
      <if test="overDays != null">
        over_days,
      </if>
      <if test="overRent != null">
        over_rent,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="readerName != null">
        #{readerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=DOUBLE},
      </if>
      <if test="borrowsDays != null">
        #{borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="overDays != null">
        #{overDays,jdbcType=INTEGER},
      </if>
      <if test="overRent != null">
        #{overRent,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.test.lms.bean.RecordExample" resultType="java.lang.Long">
    select count(*) from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookNum != null">
        book_num = #{record.bookNum,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.readerName != null">
        reader_name = #{record.readerName,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowDate != null">
        borrow_date = #{record.borrowDate,jdbcType=DATE},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.rent != null">
        rent = #{record.rent,jdbcType=DOUBLE},
      </if>
      <if test="record.borrowsDays != null">
        borrows_days = #{record.borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="record.overDays != null">
        over_days = #{record.overDays,jdbcType=INTEGER},
      </if>
      <if test="record.overRent != null">
        over_rent = #{record.overRent,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_record
    set id = #{record.id,jdbcType=INTEGER},
      book_num = #{record.bookNum,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      reader_name = #{record.readerName,jdbcType=VARCHAR},
      borrow_date = #{record.borrowDate,jdbcType=DATE},
      return_date = #{record.returnDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      rent = #{record.rent,jdbcType=DOUBLE},
      borrows_days = #{record.borrowsDays,jdbcType=INTEGER},
      over_days = #{record.overDays,jdbcType=INTEGER},
      over_rent = #{record.overRent,jdbcType=DOUBLE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.test.lms.bean.Record">
    update tb_record
    <set>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="readerName != null">
        reader_name = #{readerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=DOUBLE},
      </if>
      <if test="borrowsDays != null">
        borrows_days = #{borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="overDays != null">
        over_days = #{overDays,jdbcType=INTEGER},
      </if>
      <if test="overRent != null">
        over_rent = #{overRent,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.test.lms.bean.Record">
    update tb_record
    set book_num = #{bookNum,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      reader_name = #{readerName,jdbcType=VARCHAR},
      borrow_date = #{borrowDate,jdbcType=DATE},
      return_date = #{returnDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=DOUBLE},
      borrows_days = #{borrowsDays,jdbcType=INTEGER},
      over_days = #{overDays,jdbcType=INTEGER},
      over_rent = #{overRent,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="cn.test.lms.bean.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_num" jdbcType="VARCHAR" property="bookNum" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="reader_name" jdbcType="VARCHAR" property="readerName" />
    <result column="borrow_date" jdbcType="DATE" property="borrowDate" />
    <result column="return_date" jdbcType="DATE" property="returnDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="rent" jdbcType="DOUBLE" property="rent" />
    <result column="borrows_days" jdbcType="INTEGER" property="borrowsDays" />
    <result column="over_days" jdbcType="INTEGER" property="overDays" />
    <result column="over_rent" jdbcType="DOUBLE" property="overRent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_num, book_name, reader_name, borrow_date, return_date, status, rent, borrows_days, 
    over_days, over_rent, user_id
  </sql>
  <select id="selectByExample" parameterType="cn.test.lms.bean.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.test.lms.bean.RecordExample">
    delete from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.test.lms.bean.Record">
    insert into tb_record (id, book_num, book_name, 
      reader_name, borrow_date, return_date, 
      status, rent, borrows_days, 
      over_days, over_rent, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{bookNum,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, 
      #{readerName,jdbcType=VARCHAR}, #{borrowDate,jdbcType=DATE}, #{returnDate,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{rent,jdbcType=DOUBLE}, #{borrowsDays,jdbcType=INTEGER}, 
      #{overDays,jdbcType=INTEGER}, #{overRent,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.test.lms.bean.Record">
    insert into tb_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="readerName != null">
        reader_name,
      </if>
      <if test="borrowDate != null">
        borrow_date,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="borrowsDays != null">
        borrows_days,
      </if>
      <if test="overDays != null">
        over_days,
      </if>
      <if test="overRent != null">
        over_rent,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="readerName != null">
        #{readerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null">
        #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=DOUBLE},
      </if>
      <if test="borrowsDays != null">
        #{borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="overDays != null">
        #{overDays,jdbcType=INTEGER},
      </if>
      <if test="overRent != null">
        #{overRent,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.test.lms.bean.RecordExample" resultType="java.lang.Long">
    select count(*) from tb_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookNum != null">
        book_num = #{record.bookNum,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.readerName != null">
        reader_name = #{record.readerName,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowDate != null">
        borrow_date = #{record.borrowDate,jdbcType=DATE},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.rent != null">
        rent = #{record.rent,jdbcType=DOUBLE},
      </if>
      <if test="record.borrowsDays != null">
        borrows_days = #{record.borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="record.overDays != null">
        over_days = #{record.overDays,jdbcType=INTEGER},
      </if>
      <if test="record.overRent != null">
        over_rent = #{record.overRent,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_record
    set id = #{record.id,jdbcType=INTEGER},
      book_num = #{record.bookNum,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      reader_name = #{record.readerName,jdbcType=VARCHAR},
      borrow_date = #{record.borrowDate,jdbcType=DATE},
      return_date = #{record.returnDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR},
      rent = #{record.rent,jdbcType=DOUBLE},
      borrows_days = #{record.borrowsDays,jdbcType=INTEGER},
      over_days = #{record.overDays,jdbcType=INTEGER},
      over_rent = #{record.overRent,jdbcType=DOUBLE},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.test.lms.bean.Record">
    update tb_record
    <set>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="readerName != null">
        reader_name = #{readerName,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null">
        borrow_date = #{borrowDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=DOUBLE},
      </if>
      <if test="borrowsDays != null">
        borrows_days = #{borrowsDays,jdbcType=INTEGER},
      </if>
      <if test="overDays != null">
        over_days = #{overDays,jdbcType=INTEGER},
      </if>
      <if test="overRent != null">
        over_rent = #{overRent,jdbcType=DOUBLE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.test.lms.bean.Record">
    update tb_record
    set book_num = #{bookNum,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      reader_name = #{readerName,jdbcType=VARCHAR},
      borrow_date = #{borrowDate,jdbcType=DATE},
      return_date = #{returnDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=DOUBLE},
      borrows_days = #{borrowsDays,jdbcType=INTEGER},
      over_days = #{overDays,jdbcType=INTEGER},
      over_rent = #{overRent,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>