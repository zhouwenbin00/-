<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    					http://www.springframework.org/schema/beans/spring-beans.xsd
    					http://www.springframework.org/schema/mvc
    					http://www.springframework.org/schema/mvc/spring-mvc.xsd
    					http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- spring的配置文件，这里是主要配置和业务逻辑有关-->
    <!-- spring配置文件核心点：（数据源、与mybatis的整合、事务控制）-->

    <!-- 开启扫描-->
    <context:component-scan base-package="cn.test.lms">
        <!-- 不扫描控制器-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 加载外部配置文件-->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- ===========================================数据源============================================-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- =======================================配置和Mybatis的整合===================================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定mybatis全局配置文件的路径-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource" />
        <!-- 指定mybatis，mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 配置扫描器，将Mybatis接口的实现加入IOC容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 将所有dao接口的实现，加入IOC容器-->
        <property name="basePackage" value="cn.test.lms.dao" />
    </bean>

    <!-- ==========================================事务控制的配置=====================================-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制住数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!--开启基于注解的事务，使用xml配置形式的事务（必要的都是xml）-->
    <aop:config>
        <!-- 切入点表达式-->
        <aop:pointcut id="txPoint" expression="execution(* cn.test.lms.service..*(..))" />
        <!-- 配置事务增强-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!-- 配置事务增强，事务如何切入-->
    <tx:advice id="txAdvice" >
        <tx:attributes>
            <!-- 所有方法都是事务方法-->
            <tx:method name="*"/>
            <!-- 以get开始的所以方法-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>
